description     "Docker Container"

stop on stopping docker
# Docker has a timeout of 10 seconds so as long as this
# is longer so we don't kill the wait process
kill timeout 20

# We don't want to TERM the `docker wait` process so we fake the signal 
# we send to it. The pre-stop script issues the `docker stop` command
# which causes the `docker wait` process to exit
kill signal CONT

# Due to a bug in upstart we need to set the modes we consider
# successful exists https://bugs.launchpad.net/upstart/+bug/568288
normal exit 0 CONT

respawn

instance ${NAME}

pre-start script
  [ ! -f /etc/docker/containers ] && { stop; exit 0; }

  if ! grep -q "^${NAME}:" /etc/docker/containers; then
    stop
    exit 0
  fi
end script

script
  LINE=$(grep "^${NAME}:" /etc/docker/containers | cut -d: -f2-| sed 's/^\s*//')

  [ -f "/var/run/docker/${NAME}.cid" ] && { ID="$(cat /var/run/docker/${NAME}.cid)"; }
  
  START=1
  if [ ! -z "${ID}" ]; then
    if docker ps | grep -q "${ID}"; then
      START=0
    else
      NID=$(docker start ${ID})
      [ "${NID}" = "${ID}" ] && START=0
    fi
  fi

  if [ $START -ne 0 ]; then
    ID=$(docker run -d ${LINE})
    # After a brief wait, ensure that the container is running
    sleep 1
    if [ "$(docker inspect -f {{.State.Running}} $ID)" = "false" ]; then
        EXIT_CODE=$(docker inspect -f {{.State.ExitCode}} $ID)
        echo "Running ${NAME} failed with exit code ${EXIT_CODE}"
        exit $EXIT_CODE
    fi
    echo ${ID} > /var/run/docker/${NAME}.cid
  fi

  exec docker wait ${ID}
end script

pre-stop script
  [ -f "/var/run/docker/${NAME}.cid" ] && { ID="$(cat /var/run/docker/${NAME}.cid)"; }
  if [ ! -z "${ID}" ]; then
     docker stop "${ID}"
  fi
end script
